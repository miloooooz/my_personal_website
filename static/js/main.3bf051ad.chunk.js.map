{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Portfolio.js","components/ContactUs.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","name","style","color","fontFamily","role","school","url","target","roleDescription","socialLinks","map","item","key","Component","About","src","alt","aboutme","address","phone","email","colors","Resume","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleScroll","prevPos","state","currentPos","window","pageYOffset","Math","abs","getColor","setState","pos","floor","random","length","addEventListener","skills","skilltype","skillname","work","CompanyName","specialization","MonthOfStarting","YearOfStarting","MonthOfLeaving","YearOfLeaving","Achievements","ite","education","Degree","UniversityName","YearOfPassing","project","projectName","projectContent","projectDescription","projectAchievement","Porfolio","portfolio","concat","ContactUs","linkedinId","Footer","imagebaseurl","App","Header_Header","About_About","Resume_Resume","Portfolio_Porfolio","ContactUs_ContactUs","Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3bf051ad.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <React.Fragment>\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n          <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n               <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n                <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Gallery</a></li> \n               {/* <li><a className=\"smoothscroll\" href=\"#testimonials\">Testimonials</a></li> */}\n               <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n            </ul>\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\"> {resumeData.name}.</h1>\n               <h3 style={{color:'#C0C0C0', fontFamily:'sans-serif '}}>I am a {resumeData.role}{<a href={resumeData.school.url} target=\"_blank\">{resumeData.school.name}</a>}.<br/>{resumeData.roleDescription}\n               </h3>\n               <hr/>\n               <ul className=\"social\">\n                  {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item =>{\n                      return(\n                              <li key={item.name}>\n                                <a href={item.url} target=\"_blank\"><i className={item.className}></i></a>\n                              </li>\n                            )\n                          }\n                    )\n                  }\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n      </React.Fragment>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class About extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"about\">\n         <div className=\"row\">\n\n            <div className=\"three columns\">\n\n              <a className=\"smoothscroll\" href=\"#portfolio\">\n               <img className=\"profile-pic\"  src=\"images/profilepic.jpg\" alt=\"profile_pic\" />\n              </a>\n\n            </div>\n\n            <div className=\"nine columns main-col\">\n\n               <h2>About Me</h2>\n               <p>\n               {\n                 resumeData.aboutme\n               }\n               </p>\n\n               <div className=\"row\">\n\n                  <div className=\"columns contact-details\">\n\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n       \t\t\t\t\t\t   <span>{resumeData.name}</span>\n                     <br></br>\n                     <span>{resumeData.address}</span>\n                     <br></br>\n                  <span>{resumeData.phone}</span>\n                      <br></br>\n                     <span>{resumeData.email}</span>\n       \t\t\t\t\t   </p>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nconst colors=['#F2F2F2','#F0ECEC','#8B8989','#BF6666','#F2C6C6','#F4A3A3','#D0CBCA','#F4F3F0','#F8F8E6']\nexport default  class Resume extends Component {\n  constructor(props){\n    super(props)\n    this.state={color:'',\n                prevPos:window.pageYOffset    }\n  }\n  getColor(){\n    const pos=Math.floor(Math.random() * colors.length)\n    return  colors[pos]\n  }\n  handleScroll=()=>{\n  const {prevPos}=this.state \n  const currentPos=window.pageYOffset\n    if(Math.abs(currentPos-prevPos)>30){\n      const color=this.getColor()\n      this.setState({prevPos:currentPos,color:color})\n    }\n\n  }\n  componentDidMount(){\n    window.addEventListener('scroll',this.handleScroll)\n  }\n  render() {\n    let resumeData = this.props.resumeData;  // import resumeData.js\n    let {color}=this.state\n    return (\n      <section id=\"resume\" >\n      <div className=\"row\">\n        <ul className=\"intro\">\n          <li>\n            <a className=\"smoothscroll\" href=\"#skill_id\">Skills</a>\n          </li>\n          <li>\n            <a className=\"smoothscroll\" href=\"#work_id\">Work</a>\n          </li>\n          <li>\n            <a className=\"smoothscroll\" href=\"#education_id\">Education</a>\n          </li>\n          <li>\n            <a className=\"smoothscroll\" href=\"#project_id\">Project</a>\n          </li>\n        </ul>\n      </div>\n\n      <div id=\"skill_id\"/>\n      <div className=\"row skill\">\n        <div className=\"three columns header-col\">\n           <h1><span>Skills</span></h1>\n        </div>\n        <div className=\"nine columns main-col\">\n          <div className=\"bars\">\n                <ul className=\"skills\">\n                  {\n                    resumeData.skills && resumeData.skills.map((item) => {\n                      return(\n                      <ul><h4>{item.skilltype}</h4>\n                        <li>\n                        {item.skillname}\n                        </li>\n                      </ul>\n                      )\n                    })\n                  }\n                </ul>\n            </div>\n        </div>\n      </div>\n\n      <div id=\"work_id\"/>\n      <div className=\"row work\">\n          <div className=\"three columns header-col\">\n            <h1>\n              <span>Work</span>\n            </h1>\n          </div>\n          <div className=\"nine columns main-col\">\n            {\n              resumeData.work && resumeData.work.map((item) => {\n                return(\n                  <div className=\"row item\">\n                     <div className=\"twelve columns\">\n                        <h3>{item.CompanyName}</h3>\n                        <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span> <em className=\"date\"> {item.MonthOfStarting} {item.YearOfStarting} - {item.MonthOfLeaving} {item.YearOfLeaving}</em></p>\n                        <p className=\"job_description\">\n                        {item.Achievements.map(ite=>{\n                          return(<ul>\n                            <li>{ite}</li>\n                          </ul>)\n                          \n                        })}\n                        </p>\n                     </div>\n\n                  </div>\n\n                )\n              })\n            }\n          </div> \n      </div>\n\n      <div id=\"education_id\"/>\n       <div className=\"row education\">\n\n          <div className=\"three columns header-col\">\n             <h1><span>Education</span></h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {\n              resumeData.education && resumeData.education.map((item)=>{\n                return(\n                  <div className=\"row item\">\n                     <div className=\"twelve columns\">\n                        <h3>{item.Degree}</h3>\n                        <a className=\"schoolLink\" href={item.url} target=\"_blank\">\n                        {item.UniversityName}\n                        </a>\n                        <p className=\"info\">\n                        {item.specialization}\n                        <span>&bull;</span> <em className=\"date\">{item.YearOfPassing}</em></p>\n                        <p>\n                        {item.Achievements}\n                        </p>\n                     </div>\n                  </div>\n                )\n              })\n            }\n          </div>\n       </div>\n\n       <div id=\"project_id\"/>\n       <div className=\"row project\">\n\n          <div className=\"three columns header-col\">\n             <h1><span>Project</span></h1>\n          </div>\n\n          <div className=\"nine columns main-col\">\n            {\n              resumeData.project && resumeData.project.map((item)=>{\n                return(\n                  <div className=\"row item\">\n                     <div className=\"twelve columns\">\n                        <a href={item.url} target=\"_blank\">\n                        <h2 className=\"projectName\">{item.projectName}</h2></a>\n                        <h4>{item.projectContent}</h4>\n                        <p className=\"info\">\n                        <span>&bull;</span> <em className=\"date\">{item.YearOfPassing}</em> </p>\n                        <p className=\"project_description\">\n                        {item.projectDescription.map(ite=>{\n                          return(<ul>\n                            <li>{ite}</li>\n                          </ul>)\n                        })}\n                        </p>\n                        <p id=\"achievement\">{item.projectAchievement}</p>\n                     </div>\n                  </div>\n                )\n              })\n            }\n          </div>\n       </div>\n\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class Porfolio extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"portfolio\">\n        <div className=\"row\">\n          <div className=\"twelve columns collapsed\">\n            <h1>Here are some moments of my life.</h1>\n            <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n              {\n                resumeData.portfolio && resumeData.portfolio.map((item) => {\n                  return (\n                    <div className=\"columns portfolio-item\">\n                      <div className=\"item-wrap\">\n\n                        <img src={`${item.url}`} className=\"item-img\"/>\n                        <div className=\"overlay\">\n                          <div className=\"portfolio-item-meta\">\n                            <h5>{item.name}</h5>\n                          </div>\n                        </div>\n\n                      </div>\n                    </div>\n                  )\n                })\n              }\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react';\nexport default class ContactUs extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n          <div className=\"row section-head\">\n            <div className=\"ten columns\">\n              <p className=\"lead\">\n              Feel free to contact me for any work or suggestions below\n              </p>\n            </div>\n          </div>\n          <div className=\"row\">\n            <aside className=\"eigth columns footer-widgets\">\n              <div className=\"widget\">\n                <h4>LinkedIn :\n                  {resumeData.linkedinId}\n                </h4>\n                <h4>Email :\n                  {resumeData.email}\n                </h4>\n              </div>\n            </aside>\n          </div>\n        </section>\n        );\n  }\n}","import React, { Component } from 'react';\nexport default class Footer extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <footer>\n      <div className=\"row\">\n        <div className=\"twelve columns\">\n          <ul className=\"social-links\">\n            {\n              resumeData.socialLinks && resumeData.socialLinks.map((item)=>{\n                return(\n                  <li>\n                    <a href={item.url}>\n                    <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n          </ul>\n          \n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n      </div>\n    </footer>\n    );\n  }\n}","let resumeData = {\n    \"imagebaseurl\":\"\",// https://picsum.photos/200/300\n    \"name\": \"Ruijun(Milo) Zhou\",\n    \"role\": \"Student in Master of Information Technology at \",\n    \"school\":{\"name\":\"UNSW\", \"url\":\"https://www.unsw.edu.au/\"},\n    \"linkedinId\":\"https://www.linkedin.com/in/milo-zhou-97510\",\n    \"email\":\"zhouruijun0510@hotmail.com\",\n    \"roleDescription\": `Love, Passion and Laughters, these are my attitudes towords life and work.`,\n    \"socialLinks\":[\n        {\n          \"name\":\"linkedin\",\n          \"url\":\"https://www.linkedin.com/in/milo-zhou-97510\",\n          \"className\":\"fa fa-linkedin\"\n        },\n        {\n          \"name\":\"github\",\n          \"url\":\"https://github.com/miloooooz\",\n          \"className\":\"fa fa-github\"\n        },\n        {\n          \"name\":\"Email\",\n          \"url\":\"mailto:zhouruijun0510@hotmail.com\",\n          \"className\":\"fa fa-envelope\"\n        },\n        {\n          \"name\":\"instagram\",\n          \"url\":\"https://www.instagram.com/miloooooz/\",\n          \"className\":\"fa fa-instagram\"\n        }\n      ],\n    \"aboutme\":`I am currently a Master student in Information Technology at UNSW, expecting to graduate in December of 2020. I am a girl with enthusiasm for learning new skills and solving problems.`,\n    \"address\":\"Sydney,Australia\",\n    \"phone\": \"(0)423-019-430\",\n    \"education\":[\n      {\n        \"Degree\":\"Master of Information Technology\",\n        \"url\":\"https://www.unsw.edu.au/\",\n        \"UniversityName\":\"University of New South Wales\",\n        \"specialization\":\"Data Science and Engineering, Artificial Intelligence\",\n        \"YearOfPassing\":\"2018-present\",\n        \n      },\n      {\n        \"Degree\":\"Bachelor of Science\",\n        \"url\":\"https://sydney.edu.au/\",\n        \"UniversityName\":\"The University of Sydney\",\n        \"specialization\":\"Biochemistry\",\n        \"YearOfPassing\":\"2015-2018\",\n      },\n     \n    ],\n    \"work\":[\n      {\n        \"CompanyName\":\"Porsche (China) Mortors Limited\",\n        \"specialization\":\"Internship in Sales Retail Business Assistant\",\n        \"MonthOfStarting\":\"Dec\",\n        \"YearOfStarting\":\"2018\",\n        \"MonthOfLeaving\":\"Feb\",\n        \"YearOfLeaving\":\"2019\",\n        \"Achievements\": [\"Take charge in Sales Incentive Refund process, update the contracts of incentive process and archive the contracts\",\n                         \"Analyze and update weekly reports including Option Load report and SEA data by using Excel\",\n                         \"Maintain sales incentive management system and support sales incentive agreement programs\",\n                         \"Confirm refund amount and price from dealers’ emails\",\n                         ]\n\n      },\n      {\n        \"CompanyName\":\"Jaguar Land Rover China\",\n        \"specialization\":\"Internship in Product Marketing department\",\n        \"MonthOfStarting\":\"Dec\",\n        \"YearOfStarting\":\"2017\",\n        \"MonthOfLeaving\":\"Feb\",\n        \"YearOfLeaving\":\"2018\",\n        \"Achievements\": [\"Assist to build up and manage the vehicle operation, keep tracking the status of the vehicles, ensure the smooth process of events\",\n                         \"Draft the work instruction for department use, provide a systematic operational process for work\",\n                         \"Manage and track the process of goods receipt in order to ensure the payment completed promptly and correctly\",\n                         \"Host and record meetings for line manager, ensure the attendance of conferee\",\n                         ]\n\n      },\n      {\n        \"CompanyName\":\"Mindshare China of WPP\",\n        \"specialization\":\"Internship in Strategy department\",\n        \"MonthOfStarting\":\"Dec\",\n        \"YearOfStarting\":\"2016\",\n        \"MonthOfLeaving\":\"Feb\",\n        \"YearOfLeaving\":\"2017\",\n        \"Achievements\": [\"Collect the information and update the weekly articles for the Wechat Official Account\",\n                          \"Organize the internal workshop and integrate the data\",\n                         \"Analyze the survey and provide the report for line manager\",\n                         \"Translate and harmonize the documents from English to Chinese\",\n                         ]\n\n      },\n    ],\n    \"project\":[\n      {\n        \"url\":\"https://github.com/miloooooz/Information_Retrieval_and_Web_Search\",\n        \"YearOfPassing\":\"09/2019-12/2019\",\n        \"projectName\":\"Information Retrieval and Web Search\",\n        \"projectContent\":\"TF-IDF index construction, query split computation, named entity disambiguation / named entity linking\",\n        \"projectDescription\":[\"Extract tokens and entities using Spacy\",\n                              \"Calculate TF-IDF score for both tokens and entities in documents\",\n                              \"Split the queries into different combinations of entities and tokens\",\n                              \"Calculate the query scores for combinations of entities and tokens, and select the one with the maximum score\",\n                              \"Use XGBoost with feature selection to build a model for Named Entity Disambiguation, applying TF-IDF and other NLP methods\",\n                              ],\n        \"projectAchievement\":\"Achievement: Obtained the 6th position for the accuracy of this course at this project and got bonus marks, reached the accuracy at 83%-92% and minimize the overfitting.\",\n      },\n      {\n        \"url\":\"https://github.com/miloooooz/network_and_applications_CDHT_P2P\",\n        \"YearOfPassing\":\"02/2019-05/2019\",\n        \"projectName\":\"Computer Network & Applications\",\n        \"projectContent\":\"Peer To Peer Simulation - Circular Distributed Hash Table\",\n        \"projectDescription\":[\"Implement Circular DHT part of the peer-to-peer(P2P) protocol\",\n                              \"Use UDP to constantly PING the predecessors and successors and implement the file transfer\",\n                              \"Use TCP to receive and send all the messages regarding file request, polite depart, sudden kill and update of new neighbors\",\n                              \"Allow the request log and response log to record the process of file transfer\",\n                              \"Deal with the complicated situation about peer joining and leaving\",\n                              \"Implementing reliable data transmission over UDP using simple stop-and-wait protocol\"\n                              ],\n        \"projectAchievement\":\"Achievement: Realized all the requirements of the project specification and finally get full mark for this project.\",\n      },\n      {\n        \"url\":\"https://github.com/miloooooz/ML-DM_recommender_system\",\n        \"YearOfPassing\":\"02/2019-05/2019\",\n        \"projectName\":\"Machine Learning & Data Mining\",\n        \"projectContent\":\"Movie Recommender System\",\n        \"projectDescription\":[\"Use memory-based (user-based & movie-based) collaborative filtering method and model-based (matrix factorization) collaborative filtering to build models for movie recommender system\",\n                              \"Curation and preparation for large-scale data\",\n                              \"Comparing the memory-based and model-based collaborative filtering and provide the one with higher accuracy\",\n                              ],\n        \"projectAchievement\":\"Achievement: Obtained the accuracy of prediction at around 50%.\",\n      },\n      {\n        \"url\":\"https://github.com/miloooooz/DL-NN_KMNIST\",\n        \"YearOfPassing\":\"09/2019-10/2019\",\n        \"projectName\":\"Neural Network & Deep Learning\",\n        \"projectContent\":\"KMNIST Handwritten Japanese Hiragana Characters Recognition\",\n        \"projectDescription\":[\"Use linear classification, feedforward neural network and CNN to implement KMNIST recognition\",\n                              ],\n        \"projectAchievement\":\"\",\n      },\n      {\n        \"url\":\"https://github.com/miloooooz/User_Movie_Rating_Hadoop_MapReduce\",\n        \"YearOfPassing\":\"10/2019-11/2019\",\n        \"projectName\":\"Big Data Management\",\n        \"projectContent\":\"Movie Rating Aggregation using MapReduce\",\n        \"projectDescription\":[\"Use Hadoop to implement MapReduce to work on the processing of a Movie Rating dataset\",\n                              \"Understand the concept of MapReduce\",\n                              \"Implement Writable Interface Class/WritableComparable Interface to realize some customized functions\",\n                              ],\n        \"projectAchievement\":\"Achievement: Got full mark on this project.\",\n      },\n      {\n        \"url\":\"https://github.com/miloooooz/Spark_Shortest-path\",\n        \"YearOfPassing\":\"11/2019-12/2019\",\n        \"projectName\":\"Big Data Management\",\n        \"projectContent\":\"Spark: Single-Source Shortest Path\",\n        \"projectDescription\":[\"Use Spark to implement the search of the shortest path from given node\",\n                              \"Understand the concept of RDD\",\n                              \"Apply Dijkstra to realize the algorithm of shortest path searching\",\n                              ],\n        \"projectAchievement\":\"Achievement: Got full mark on this project.\",\n      },\n      {\n        \"url\":\"https://github.com/miloooooz/webspider_book-photo_downloader\",\n        \"YearOfPassing\":\"01/2020-02/2020\",\n        \"projectName\":\"Web Spider Personal Project\",\n        \"projectContent\":\"Free book downloader/Unsplash photo downloader\",\n        \"projectDescription\":[\"Applying Requests and BeautifulSoup to realize the basic web spider process\",\n                              \"Using RE to filter out specific characters that the user wants for book downloading\",\n                              \"Using multi-threads to speed up the process of photo downloading\",\n                              \"Allow customization of the page number and the book name\",\n                              ],\n        \"projectAchievement\":\"\",\n      },\n      {\n        \"url\":\"\",\n        \"YearOfPassing\":\"02/2020-03/2020\",\n        \"projectName\":\"Personal Website\",\n        \"projectContent\":\"\",\n        \"projectDescription\":[\"Construct the website using Reactjs\",\n                              ],\n        \"projectAchievement\":\"\",\n      },\n    ],\n    \"skills\":[\n      {\n        \"skilltype\": \"Programming Language\",\n        \"skillname\": \"Python, Java, C, SQL, HTML5, CSS3, JavaScript\",\n      },\n      {\n        \"skilltype\": \"Database\",\n        \"skillname\": \"Postgresql, MySQL\",\n      },\n      {\n        \"skilltype\": \"Machine Learning Tools\",\n        \"skillname\": \"PyTorch/TensorFlow\",\n      },\n      {\n        \"skilltype\": \"Other Tools\",\n        \"skillname\": \"Pandas, Numpy, Sklearn, Spark/Hadoop, git\",\n      },\n      {\n        \"skilltype\": \"Front-End Framework\",\n        \"skillname\": \"React\",\n      },\n      {\n        \"skilltype\": \"Languages\",\n        \"skillname\": \"English, Chinese, Japanese\",\n      },\n    ],\n\n    \"portfolio\": [\n      {\n        \"name\": \"My kitten Yoyo\",\n        \"url\":\"images/gallery/yoyo_1.jpg\",\n      },\n      {\n        \"name\": \"My kitten Yoyo\",\n        \"url\":\"images/gallery/yoyo_2.jpg\",\n      },\n      {\n        \"name\": \"Daughter of Yoyo: Fei\",\n        \"url\":\"images/gallery/fei.jpg\",\n      },\n      {\n        \"name\": \"Aquarium\",\n        \"url\":\"images/gallery/Aquarium.png\",\n      },\n      {\n        \"name\": \"Me\",\n        \"url\":\"images/gallery/Me.jpeg\",\n      },\n      {\n        \"name\": \"Diamond bay\",\n        \"url\":\"images/gallery/diamond_bay.jpeg\",\n      },\n      {\n        \"name\": \"National botany garden in Sydney\",\n        \"url\":\"images/gallery/Flower_in_National_Botany_Garden.jpeg\",\n      },\n      {\n        \"name\": \"The Quadrangle Building of USYD\",\n        \"url\":\"images/gallery/USYD.jpeg\",\n      },\n    ],\n\n    // \"portfolio\":[\n    //   {\n    //     \"name\":\"Shopg\",\n    //     \"description\":`Revamped the whole app according to the customer's need\n    //     integrated SMS and Push notification\n    //     created RESTful api endpoints\n    //     Tools:\n    //     Reactjs,Nodejs,Expressjs,reduxjs,Postgresql,HTML5,CSS3,NGINX,firebase,Aws`,\n    //     \"imgurl\":\"images/shop.jpg\"\n    //   },\n    //   {\n    //     \"name\":\"Skoolnet\",\n    //     \"description\":`developed screens using react-native for IOS/Android\n    //     Tracked and solved tickets for defects on bug reporting tool (JIRA)\n    //     Tools: React Native`,\n    //     \"imgurl\":\"images/skoolnet.jpg\"\n    //   },\n    //   {\n    //     \"name\":\"Dawaadost\",\n    //     \"description\":`created a vendor App for IOS/Android using react native\n    //     developed and deployed the frontend and backend of the website\n    //     Tools: Reactjs,Nodejs,Expressjs,reduxjs,Postgresql,HTML5,CSS3,Nginx,Ant Design`,  \n    //     \"imgurl\":\"images/medicine.jpg\"\n    //   },\n    //   {\n    //     \"name\":\"Mai web\",\n    //     \"description\":`created pixel perfect responsive Web pages for provided screens\n    //     using Reactjs\n    //     Consumed RESTful api for rendering data using Axios\n    //     Tools: Reactjs,reduxjs,HTML5,CSS3`,\n    //     \"imgurl\":\"images/parenting.jpg\"\n    //   }\n    // ],\n  }\n  \n  export default resumeData","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Resume from './components/Resume';\nimport Portfolio from './components/Portfolio';\n// import Testimonials from  './components/Testimonials';\nimport ContactUs from './components/ContactUs';\nimport Footer from './components/Footer';\nimport resumeData from './resumeData';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header resumeData={resumeData}/>\n        <About resumeData={resumeData}/>\n        <Resume resumeData={resumeData}/>\n        <Portfolio resumeData={resumeData}/>\n        <ContactUs resumeData={resumeData}/>\n        <Footer resumeData={resumeData}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}